import{_ as t,c as e,o as s,a4 as a}from"./chunks/framework._UsQjgc3.js";const E=JSON.parse('{"title":"handleError","description":"","frontmatter":{},"headers":[],"relativePath":"utilities/handleError.md","filePath":"utilities/handleError.md","lastUpdated":null}'),r={name:"utilities/handleError.md"},i=a(`<h1 id="handleerror" tabindex="-1">handleError <a class="header-anchor" href="#handleerror" aria-label="Permalink to &quot;handleError&quot;">​</a></h1><div class="danger custom-block"><p class="custom-block-title">Incomplete</p><p>this utility is not ready for production yet, it only logs the errors for now.</p></div><p><strong>description:</strong> This utility function is a global error handler used to handle thrown errors anywhere.</p><p><strong>arguments:</strong></p><table><thead><tr><th style="text-align:center;">arg name</th><th style="text-align:center;">type</th><th style="text-align:center;">required</th><th style="text-align:center;">default</th><th style="text-align:center;">description</th></tr></thead><tbody><tr><td style="text-align:center;">error</td><td style="text-align:center;">Error</td><td style="text-align:center;">✴️</td><td style="text-align:center;">-</td><td style="text-align:center;">error object</td></tr><tr><td style="text-align:center;">message</td><td style="text-align:center;">String</td><td style="text-align:center;">❎</td><td style="text-align:center;">&quot;An error occured.&quot;</td><td style="text-align:center;">error explainer message</td></tr><tr><td style="text-align:center;">uiFeedback</td><td style="text-align:center;">Boolean</td><td style="text-align:center;">❎</td><td style="text-align:center;">false</td><td style="text-align:center;">wheather to show error message to the user or not</td></tr></tbody></table><p><strong>return value:</strong> NONE</p><p><strong>usage:</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark has-focused-lines vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> handleError </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;src/utils/handleError.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // code throws error...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (error) {</span></span>
<span class="line has-focus"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  handleError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(error, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;oops&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,8),n=[i];function l(h,o,d,p,c,g){return s(),e("div",null,n)}const y=t(r,[["render",l]]);export{E as __pageData,y as default};
