import{_ as e,c as a,o as t,a4 as o}from"./chunks/framework._UsQjgc3.js";const _=JSON.parse('{"title":"Components Structure","description":"","frontmatter":{},"headers":[],"relativePath":"components/structure.md","filePath":"components/structure.md","lastUpdated":null}'),n={name:"components/structure.md"},s=o('<h1 id="components-structure" tabindex="-1">Components Structure <a class="header-anchor" href="#components-structure" aria-label="Permalink to &quot;Components Structure&quot;">​</a></h1><h2 id="├─-page-name" tabindex="-1">├─ <code>&lt;page_name&gt;/</code> <a class="header-anchor" href="#├─-page-name" aria-label="Permalink to &quot;├─ `&lt;page_name&gt;/`&quot;">​</a></h2><p>each page has its own directory for example</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>.components/</span></span>\n<span class="line"><span>├─ CVPage/</span></span>\n<span class="line"><span>├─ contactPage/</span></span>\n<span class="line"><span>├─ homePage/</span></span>\n<span class="line"><span>...</span></span></code></pre></div><p>this is for components that are only used for that page</p><h2 id="├─-sections" tabindex="-1">├─ <code>sections/</code> <a class="header-anchor" href="#├─-sections" aria-label="Permalink to &quot;├─ `sections/`&quot;">​</a></h2><p>this is for section components that can be used on multiple pages, for example, a &quot;CTASection&quot; or a &quot;contactUsSection&quot;</p><h2 id="├─-micro" tabindex="-1">├─ <code>micro/</code> <a class="header-anchor" href="#├─-micro" aria-label="Permalink to &quot;├─ `micro/`&quot;">​</a></h2><p>this is for monofunctional components, e.g. buttons, inputs, sliders, badges, etc...</p><h2 id="└─-macro" tabindex="-1">└─ <code>macro/</code> <a class="header-anchor" href="#└─-macro" aria-label="Permalink to &quot;└─ `macro/`&quot;">​</a></h2><p>this is for compounded components that can be used in diverse containers, like components that are made of more than one micro component or components that display a specific type of info. for example article cards, video cards, notification cards, etc... where these components can be used in a list or just on their own.</p>',11),c=[s];function r(i,p,l,d,h,m){return t(),a("div",null,c)}const f=e(n,[["render",r]]);export{_ as __pageData,f as default};
